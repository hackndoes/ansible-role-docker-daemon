---

- name: "Update APT cache"
  apt:
    update_cache: yes

- name: Uninstall older versions
  apt:
    name: "{{ item }}"
    state: absent
  with_items:
    - docker
    - docker-engine
    - docker.io
    - lxc-docker

- name: Get currently installed docker-ce version
  changed_when: False
  ignore_errors: yes
  register: docker_version
  command: docker --version

- debug:
    var: docker_version
    verbosity: 1

- debug:
    var: docker_engine_version
    verbosity: 1

- name: Remove docker-ce if not in required version
  apt:
    name: docker-ce
    state: absent
  when: docker_version|failed or docker_version.stdout.find(docker_engine_version) < 0

#- name: Install kernel headers for aufs support
  #apt:
    #name: "{{ item }}"
    #state: present
  #with_items:
    #- "linux-image-extra-{{ ansible_kernel }}"
    #- linux-image-extra-virtual

- name: Install Requirements
  apt:
    name: "{{ item }}"
    state: latest
  with_items:
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common

#- debug:
    #msg: "ansible_python_version is >= 2.7.9 {{ ansible_python_version | version_compare('2.7.9', '>=') }}"
    #verbosity: 1

#- name: "Add apt key of the latest repo"
  #apt_key:
    #url: "{{ gpg_key_url }}"
    #state: present
    #validate_certs: "{{ ansible_python_version | version_compare('2.7.9', '>=') }}"

- name: "Add apt key of the latest repo"
  shell: "/usr/bin/curl {{ gpg_key_url }} | sudo /usr/bin/apt-key add -"
  
- name: "Add repository"
  apt_repository:
    repo: 'deb {{ docker_repo }} {{ ansible_distribution_release }} stable'
    state: present

- name: "Verify that apt is pulling from the right repository"
  command: apt-cache policy docker-engine

- name: "Update apt cache for new repo to kick in"
  apt:
    update_cache: yes
